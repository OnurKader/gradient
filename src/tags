!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BLACK	color.c	/^static const char RESET[] = "\\033[m", BLACK[] = "\\033[38;2;0;0;0m",$/;"	v	file:
BLUE	color.c	/^				  GREEN[] = "\\033[38;2;0;255;0m", BLUE[] = "\\033[38;2;0;0;255m",$/;"	v	file:
BROWN	color.c	/^				  LIME[] = "\\033[38;2;111;255;8m", BROWN[] = "\\033[38;2;142;69;23m",$/;"	v	file:
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS= -g -std=c11 -Wall -Wextra -Wpedantic -Wshadow -O3$/;"	m
COLOR_H	color.c	5;"	d	file:
CYAN	color.c	/^				  CYAN[] = "\\033[38;0;2;255;255m", PURPLE[] = "\\033[38;2;127;32;183m",$/;"	v	file:
GREEN	color.c	/^				  GREEN[] = "\\033[38;2;0;255;0m", BLUE[] = "\\033[38;2;0;0;255m",$/;"	v	file:
LIME	color.c	/^				  LIME[] = "\\033[38;2;111;255;8m", BROWN[] = "\\033[38;2;142;69;23m",$/;"	v	file:
MAGENTA	color.c	/^				  YELLOW[] = "\\033[38;2;255;255;0m", MAGENTA[] = "\\033[38;2;255;0;255m",$/;"	v	file:
MAX	color.c	12;"	d	file:
MIN	color.c	13;"	d	file:
ORANGE	color.c	/^				  ORANGE[] = "\\033[38;2;255;127;8m";$/;"	v	file:
PURPLE	color.c	/^				  CYAN[] = "\\033[38;0;2;255;255m", PURPLE[] = "\\033[38;2;127;32;183m",$/;"	v	file:
RED	color.c	/^				  WHITE[] = "\\033[38;2;255;255;255m", RED[] = "\\033[38;2;255;0;0m",$/;"	v	file:
RESET	color.c	/^static const char RESET[] = "\\033[m", BLACK[] = "\\033[38;2;0;0;0m",$/;"	v	file:
WHITE	color.c	/^				  WHITE[] = "\\033[38;2;255;255;255m", RED[] = "\\033[38;2;255;0;0m",$/;"	v	file:
YELLOW	color.c	/^				  YELLOW[] = "\\033[38;2;255;255;0m", MAGENTA[] = "\\033[38;2;255;0;255m",$/;"	v	file:
b	color.c	/^	uint8_t r, g, b;$/;"	m	struct:__anon1	file:
color_t	color.c	/^} color_t;$/;"	t	typeref:struct:__anon1	file:
g	color.c	/^	uint8_t r, g, b;$/;"	m	struct:__anon1	file:
getTermSize	main.c	/^void getTermSize(short* width, short* height)$/;"	f
gradient	main.c	/^void gradient(const short width, const short height) {}$/;"	f
h	color.c	/^	double h, s, v;	   \/\/ 360° for all$/;"	m	struct:__anon1	file:
main	main.c	/^int main(int argc, const char** argv)$/;"	f
map	utils.c	/^double map(double val, double dmin, double dmax, double rmin, double rmax)$/;"	f
r	color.c	/^	uint8_t r, g, b;$/;"	m	struct:__anon1	file:
rgb2hsv	color.c	/^void rgb2hsv(color_t* color)$/;"	f
s	color.c	/^	double h, s, v;	   \/\/ 360° for all$/;"	m	struct:__anon1	file:
setGREY	color.c	/^const char* setGREY(color_t* color, uint8_t g)$/;"	f
setHSV	color.c	/^void setHSV(color_t* color, uint16_t h, uint16_t s, uint16_t v)$/;"	f
setRGB	color.c	/^const char* setRGB(color_t* color, uint8_t r, uint8_t g, uint8_t b)$/;"	f
setStr	color.c	/^const char* setStr(color_t* color)$/;"	f
sgetGREY	color.c	/^void sgetGREY(char* buff, uint8_t g) { sprintf(buff, "\\033[38;2;%u;%u;%um", g, g, g); }$/;"	f
sgetRGB	color.c	/^void sgetRGB(char* buff, uint8_t r, uint8_t g, uint8_t b)$/;"	f
str	color.c	/^	char str[24];$/;"	m	struct:__anon1	file:
v	color.c	/^	double h, s, v;	   \/\/ 360° for all$/;"	m	struct:__anon1	file:
